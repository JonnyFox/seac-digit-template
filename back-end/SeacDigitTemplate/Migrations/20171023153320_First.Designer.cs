// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SeacDigitTemplate.Data;
using SeacDigitTemplate.Model;
using System;

namespace SeacDigitTemplate.Migrations
{
    [DbContext(typeof(SeacDigitTemplateContex))]
    [Migration("20171023153320_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeacDigitTemplate.Model.AliquotaIva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Percentuale");

                    b.HasKey("Id");

                    b.ToTable("AliquotaIVAs");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Clifor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Istituzionale");

                    b.Property<string>("Nome");

                    b.Property<int>("Soggetto");

                    b.HasKey("Id");

                    b.ToTable("Clifors");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Conto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Contos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Caratteristica");

                    b.Property<int>("CliforId");

                    b.Property<string>("Numero");

                    b.Property<int>("Protocollo");

                    b.Property<int>("Registro");

                    b.Property<int>("RiferimentoDocumentoId");

                    b.Property<decimal>("RitenutaAcconto");

                    b.Property<int>("Sospeso");

                    b.Property<int>("Tipo");

                    b.Property<decimal>("Totale");

                    b.HasKey("Id");

                    b.HasIndex("CliforId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.RigaDigitata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AliquotaIvaId");

                    b.Property<int?>("ContoAvereId");

                    b.Property<int?>("ContoDareId");

                    b.Property<int>("DocumentoId");

                    b.Property<decimal>("Imponibile");

                    b.Property<decimal>("Iva");

                    b.Property<string>("Note");

                    b.Property<decimal>("PercentualeIndeducibilita");

                    b.Property<decimal>("PercentualeIndetraibilita");

                    b.Property<int>("Settore");

                    b.Property<int?>("TitoloInapplicabilitaId");

                    b.Property<int>("Trattamento");

                    b.Property<int?>("VoceIvaId");

                    b.HasKey("Id");

                    b.HasIndex("AliquotaIvaId");

                    b.HasIndex("ContoAvereId");

                    b.HasIndex("ContoDareId");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("TitoloInapplicabilitaId");

                    b.HasIndex("VoceIvaId");

                    b.ToTable("RigaDigitatas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneConto", b =>
                {
                    b.Property<int>("ContoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContoId1");

                    b.Property<decimal>("Valore");

                    b.Property<decimal>("Variazione");

                    b.HasKey("ContoId");

                    b.HasIndex("ContoId1");

                    b.ToTable("SituazioneContos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneVoceIva", b =>
                {
                    b.Property<int>("VoceIvaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AliquotaIvaId");

                    b.Property<int>("TitoloInapplicabilita");

                    b.Property<int>("Trattamento");

                    b.Property<decimal>("Valore");

                    b.Property<int?>("VoceIvaId1");

                    b.HasKey("VoceIvaId");

                    b.HasIndex("AliquotaIvaId");

                    b.HasIndex("VoceIvaId1");

                    b.ToTable("SituazioneVoceIVAs");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.VoceIva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("VoceIVAs");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.ApplicazioneTemplateEffetto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIva");

                    b.Property<string>("ContoAvere");

                    b.Property<string>("ContoDare");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("Note");

                    b.Property<string>("PercentualeIndeducibilita");

                    b.Property<string>("PercentualeIndetraibilita");

                    b.Property<string>("Settore");

                    b.Property<string>("TitoloInapplicabilita");

                    b.Property<string>("Trattamento");

                    b.Property<string>("VoceIva");

                    b.HasKey("Id");

                    b.ToTable("ApplicazioneTemplateEffettos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateEffetto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AliquotaIVAId");

                    b.Property<int?>("ContoAvereId");

                    b.Property<int?>("ContoDareId");

                    b.Property<int>("IdDoc");

                    b.Property<int>("IdRow");

                    b.Property<decimal>("Indet");

                    b.Property<int>("RifRow");

                    b.Property<int>("TitoloInapplicabilita");

                    b.Property<decimal>("Valore");

                    b.Property<decimal>("VariazioneF");

                    b.Property<int?>("VoceIVAId");

                    b.HasKey("Id");

                    b.HasIndex("AliquotaIVAId");

                    b.HasIndex("ContoAvereId");

                    b.HasIndex("ContoDareId");

                    b.HasIndex("VoceIVAId");

                    b.ToTable("TemplateEffettos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TitoloInapplicabilita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("TitoloInapplicabilitas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Documento", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.Clifor", "Clifor")
                        .WithMany()
                        .HasForeignKey("CliforId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.RigaDigitata", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.AliquotaIva", "AliquotaIVA")
                        .WithMany()
                        .HasForeignKey("AliquotaIvaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoAvere")
                        .WithMany()
                        .HasForeignKey("ContoAvereId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoDare")
                        .WithMany()
                        .HasForeignKey("ContoDareId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Documento", "Documento")
                        .WithMany("righeDigitate")
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Models.TitoloInapplicabilita", "TitoloInapplicabilita")
                        .WithMany()
                        .HasForeignKey("TitoloInapplicabilitaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.VoceIva", "VoceIVA")
                        .WithMany()
                        .HasForeignKey("VoceIvaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneConto", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.Conto", "Conto")
                        .WithMany()
                        .HasForeignKey("ContoId1")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneVoceIva", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.AliquotaIva", "AliquotaIva")
                        .WithMany()
                        .HasForeignKey("AliquotaIvaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.VoceIva", "VoceIva")
                        .WithMany()
                        .HasForeignKey("VoceIvaId1")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateEffetto", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.AliquotaIva", "AliquotaIVA")
                        .WithMany()
                        .HasForeignKey("AliquotaIVAId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoAvere")
                        .WithMany()
                        .HasForeignKey("ContoAvereId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoDare")
                        .WithMany()
                        .HasForeignKey("ContoDareId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.VoceIva", "VoceIVA")
                        .WithMany()
                        .HasForeignKey("VoceIVAId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
