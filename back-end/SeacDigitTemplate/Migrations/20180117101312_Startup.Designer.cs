// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SeacDigitTemplate.Data;
using SeacDigitTemplate.Model;
using System;

namespace SeacDigitTemplate.Migrations
{
    [DbContext(typeof(SeacDigitTemplateContext))]
    [Migration("20180117101312_Startup")]
    partial class Startup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeacDigitTemplate.Model.AliquotaIva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Percentuale");

                    b.HasKey("Id");

                    b.ToTable("AliquotaIvas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Clifor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Istituzionale");

                    b.Property<string>("Nome");

                    b.Property<int>("Soggetto");

                    b.HasKey("Id");

                    b.ToTable("Clifors");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Conto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Contos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Caratteristica");

                    b.Property<int>("CliforId");

                    b.Property<string>("Descrizione");

                    b.Property<string>("Numero");

                    b.Property<int>("Protocollo");

                    b.Property<int>("Registro");

                    b.Property<int>("RiferimentoDocumentoId");

                    b.Property<decimal?>("RitenutaAcconto");

                    b.Property<int>("Sospeso");

                    b.Property<int?>("TemplateGenerazioneEffettoDocumentoId");

                    b.Property<int>("Tipo");

                    b.Property<decimal>("Totale");

                    b.Property<bool?>("isGenerated");

                    b.HasKey("Id");

                    b.HasIndex("CliforId");

                    b.HasIndex("TemplateGenerazioneEffettoDocumentoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descrizione");

                    b.Property<string>("Effetto");

                    b.HasKey("Id");

                    b.ToTable("FeedbackList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.RigaDigitata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AliquotaIvaId");

                    b.Property<int?>("ContoAvereId");

                    b.Property<int?>("ContoDareId");

                    b.Property<int>("DocumentoId");

                    b.Property<decimal?>("Imponibile");

                    b.Property<decimal?>("Iva");

                    b.Property<string>("Note");

                    b.Property<decimal?>("PercentualeAliquotaIva");

                    b.Property<decimal?>("PercentualeIndeducibilita");

                    b.Property<decimal?>("PercentualeIndetraibilita");

                    b.Property<int?>("Settore");

                    b.Property<int?>("TemplateGenerazioneEffettoRigaId");

                    b.Property<int?>("TitoloInapplicabilitaId");

                    b.Property<int?>("Trattamento");

                    b.Property<int?>("VoceIvaId");

                    b.Property<bool?>("toAdd");

                    b.HasKey("Id");

                    b.HasIndex("AliquotaIvaId");

                    b.HasIndex("ContoAvereId");

                    b.HasIndex("ContoDareId");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("TemplateGenerazioneEffettoRigaId");

                    b.HasIndex("TitoloInapplicabilitaId");

                    b.HasIndex("VoceIvaId");

                    b.ToTable("RigaDigitatas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneConto", b =>
                {
                    b.Property<int>("ContoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContoId1");

                    b.Property<decimal>("Sospeso");

                    b.Property<decimal>("Valore");

                    b.Property<decimal>("VariazioneFiscale");

                    b.HasKey("ContoId");

                    b.HasIndex("ContoId1");

                    b.ToTable("SituazioneContos");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneVoceIva", b =>
                {
                    b.Property<int?>("VoceIvaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AliquotaIvaId");

                    b.Property<decimal>("Imponibile");

                    b.Property<decimal>("Iva");

                    b.Property<decimal>("Sospeso");

                    b.Property<int?>("TitoloInapplicabilitaId");

                    b.Property<int?>("Trattamento");

                    b.Property<int?>("VoceIvaId1");

                    b.HasKey("VoceIvaId");

                    b.HasIndex("AliquotaIvaId");

                    b.HasIndex("VoceIvaId1");

                    b.ToTable("SituazioneVoceIVAs");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.VoceIva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("VoceIvas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.ApplicazioneTemplateDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIva");

                    b.Property<string>("Caratteristica");

                    b.Property<string>("ContoAvere");

                    b.Property<string>("ContoDare");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("Note");

                    b.Property<string>("PercentualeIndeducibilita");

                    b.Property<string>("PercentualeIndetraibilita");

                    b.Property<string>("Registro");

                    b.Property<string>("RitenutaAcconto");

                    b.Property<string>("Settore");

                    b.Property<string>("Sospeso");

                    b.Property<string>("Tipo");

                    b.Property<string>("TitoloInapplicabilita");

                    b.Property<string>("Trattamento");

                    b.Property<string>("VoceIva");

                    b.HasKey("Id");

                    b.ToTable("ApplicazioneTemplateDocumentoList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.ApplicazioneTemplateEffetto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIva");

                    b.Property<string>("Caratteristica");

                    b.Property<string>("ContoAvere");

                    b.Property<string>("ContoDare");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("Note");

                    b.Property<string>("PercentualeIndeducibilita");

                    b.Property<string>("PercentualeIndetraibilita");

                    b.Property<string>("Registro");

                    b.Property<string>("RitenutaAcconto");

                    b.Property<string>("Settore");

                    b.Property<string>("Sospeso");

                    b.Property<string>("Tipo");

                    b.Property<string>("TitoloInapplicabilita");

                    b.Property<string>("Trattamento");

                    b.Property<string>("VoceIva");

                    b.HasKey("Id");

                    b.ToTable("ApplicazioneTemplateEffettoList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.ApplicazioneTemplateRiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIva");

                    b.Property<string>("Caratteristica");

                    b.Property<string>("CaratteristicaEffetto");

                    b.Property<string>("ContoAvere");

                    b.Property<string>("ContoDare");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("Note");

                    b.Property<string>("PercentualeIndeducibilita");

                    b.Property<string>("PercentualeIndetraibilita");

                    b.Property<string>("Registro");

                    b.Property<string>("RegistroEffetto");

                    b.Property<string>("RitenutaAcconto");

                    b.Property<string>("RitenutaAccontoEffetto");

                    b.Property<string>("Settore");

                    b.Property<string>("Sospeso");

                    b.Property<string>("SospesoEffetto");

                    b.Property<string>("Tipo");

                    b.Property<string>("TipoEffetto");

                    b.Property<string>("TitoloInapplicabilita");

                    b.Property<string>("Trattamento");

                    b.Property<string>("VoceIva");

                    b.HasKey("Id");

                    b.ToTable("ApplicazioneTemplateRigaList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicazioneTemplateDocumentoId");

                    b.Property<string>("Caratteristica");

                    b.Property<string>("CliforId");

                    b.Property<string>("Numero");

                    b.Property<string>("Protocollo");

                    b.Property<string>("Registro");

                    b.Property<string>("RiferimentoDocumentoId");

                    b.Property<string>("RitenutaAcconto");

                    b.Property<string>("Sospeso");

                    b.Property<string>("Tipo");

                    b.Property<string>("Totale");

                    b.HasKey("Id");

                    b.HasIndex("ApplicazioneTemplateDocumentoId");

                    b.ToTable("TemplateDocumentoList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateEffetto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIvaId");

                    b.Property<int>("ApplicazioneTemplateEffettoId");

                    b.Property<string>("ContoAvereId");

                    b.Property<string>("ContoDareId");

                    b.Property<string>("DataOperazione");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("RifRow");

                    b.Property<string>("TitoloInapplicabilitaId");

                    b.Property<string>("Trattamento");

                    b.Property<string>("Valore");

                    b.Property<string>("VariazioneFiscale");

                    b.Property<string>("VoceIvaId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicazioneTemplateEffettoId");

                    b.ToTable("TemplateEffettoList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateRiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliquotaIvaId");

                    b.Property<int>("ApplicazioneTemplateRigaId");

                    b.Property<string>("ContoAvereId");

                    b.Property<string>("ContoDareId");

                    b.Property<int?>("DocumentoId");

                    b.Property<string>("Imponibile");

                    b.Property<string>("Iva");

                    b.Property<string>("Note");

                    b.Property<string>("PercentualeAliquotaIva");

                    b.Property<string>("PercentualeIndeducibilita");

                    b.Property<string>("PercentualeIndetraibilita");

                    b.Property<string>("Settore");

                    b.Property<string>("TitoloInapplicabilitaId");

                    b.Property<string>("Trattamento");

                    b.Property<string>("VoceIvaId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicazioneTemplateRigaId");

                    b.ToTable("TemplateEffettoRigaList");
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TitoloInapplicabilita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("TitoloInapplicabilitas");
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.Documento", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.Clifor", "Clifor")
                        .WithMany()
                        .HasForeignKey("CliforId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Models.TemplateDocumento", "TemplateGenerazioneEffettoDocumento")
                        .WithMany()
                        .HasForeignKey("TemplateGenerazioneEffettoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.RigaDigitata", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.AliquotaIva", "AliquotaIva")
                        .WithMany()
                        .HasForeignKey("AliquotaIvaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoAvere")
                        .WithMany()
                        .HasForeignKey("ContoAvereId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Conto", "ContoDare")
                        .WithMany()
                        .HasForeignKey("ContoDareId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.Documento", "Documento")
                        .WithMany("rigaDigitataList")
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Models.TemplateRiga", "TemplateGenerazioneEffettoRiga")
                        .WithMany()
                        .HasForeignKey("TemplateGenerazioneEffettoRigaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Models.TitoloInapplicabilita", "TitoloInapplicabilita")
                        .WithMany()
                        .HasForeignKey("TitoloInapplicabilitaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.VoceIva", "VoceIva")
                        .WithMany()
                        .HasForeignKey("VoceIvaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneConto", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.Conto", "Conto")
                        .WithMany()
                        .HasForeignKey("ContoId1")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Model.SituazioneVoceIva", b =>
                {
                    b.HasOne("SeacDigitTemplate.Model.AliquotaIva", "AliquotaIva")
                        .WithMany()
                        .HasForeignKey("AliquotaIvaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SeacDigitTemplate.Model.VoceIva", "VoceIva")
                        .WithMany()
                        .HasForeignKey("VoceIvaId1")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateDocumento", b =>
                {
                    b.HasOne("SeacDigitTemplate.Models.ApplicazioneTemplateDocumento", "ApplicazioneTemplateDocumento")
                        .WithMany("TemplateDocumento")
                        .HasForeignKey("ApplicazioneTemplateDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateEffetto", b =>
                {
                    b.HasOne("SeacDigitTemplate.Models.ApplicazioneTemplateEffetto", "ApplicazioneTemplateEffetto")
                        .WithMany("TemplateEffetto")
                        .HasForeignKey("ApplicazioneTemplateEffettoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SeacDigitTemplate.Models.TemplateRiga", b =>
                {
                    b.HasOne("SeacDigitTemplate.Models.ApplicazioneTemplateRiga", "ApplicazioneTemplateRiga")
                        .WithMany("TemplateEffetto")
                        .HasForeignKey("ApplicazioneTemplateRigaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
